{"ast":null,"code":"import * as echarts from 'echarts';\nconst pieOption = {\n  title: {\n    text: '物资捐赠分类统计',\n    subtext: '比例图',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [{\n    type: 'pie',\n    center: ['50%', '60%'],\n    radius: '50%',\n    data: [],\n    label: {\n      show: true,\n      formatter(param) {\n        return param.name + ' (' + param.percent + '%)';\n      }\n    },\n    emphasis: {\n      itemStyle: {\n        shadowBlur: 10,\n        shadowOffsetX: 0,\n        shadowColor: 'rgba(0, 0, 0, 0.5)'\n      }\n    }\n  }]\n};\nconst barOption = {\n  title: {\n    text: '分类救援统计',\n    subtext: '柱状图',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    left: 'left'\n  },\n  xAxis: {\n    type: 'category',\n    data: []\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    data: [],\n    type: 'bar',\n    smooth: true,\n    itemStyle: {\n      normal: {\n        color: function (params) {\n          // 根据索引返回对应的颜色\n          let colorList = ['#ffaa2e', '#32C5E9', '#fa4c4c', '#08b448', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3'];\n          return colorList[params.dataIndex];\n        }\n      }\n    }\n  }]\n};\nexport default {\n  name: \"Dashboard\",\n  data() {\n    return {\n      count: {\n        helpCount: 0,\n        volCount: 0,\n        donateCount: 0,\n        commentCount: 0\n      }\n    };\n  },\n  mounted() {\n    this.load();\n    let pieDom = document.getElementById('pie');\n    let pieChart = echarts.init(pieDom);\n    this.$request.get('/pieData').then(res => {\n      pieOption.series[0].data = res.data || [];\n      pieChart.setOption(pieOption);\n    });\n\n    // 柱状图\n    let barDom = document.getElementById('bar');\n    let barChart = echarts.init(barDom);\n    this.$request.get('/barData').then(res => {\n      barOption.xAxis.data = res.data?.map(v => v.name) || [];\n      barOption.series[0].data = res.data?.map(v => v.value) || [];\n      barChart.setOption(barOption);\n    });\n  },\n  methods: {\n    load() {\n      this.$request.get('/count').then(res => {\n        this.count = res.data || {};\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","pieOption","title","text","subtext","left","tooltip","trigger","legend","orient","series","type","center","radius","data","label","show","formatter","param","name","percent","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","barOption","xAxis","yAxis","smooth","normal","color","params","colorList","dataIndex","count","helpCount","volCount","donateCount","commentCount","mounted","load","pieDom","document","getElementById","pieChart","init","$request","get","then","res","setOption","barDom","barChart","map","v","value","methods"],"sources":["src/views/manager/Dashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"display: flex; grid-gap: 15px; margin-bottom: 10px\">\r\n      <div class=\"card item\">\r\n        <div style=\"flex: 1; text-align: center\">\r\n          <img src=\"@/assets/imgs/救灾.png\" alt=\"\" style=\"width: 60px; height: 60px\">\r\n        </div>\r\n        <div style=\"flex: 1; font-size: 20px\">\r\n          <div style=\"margin-bottom: 5px\">救灾总数</div>\r\n          <div style=\"font-weight: bold\">{{ count.helpCount }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card item\">\r\n        <div style=\"flex: 1; text-align: center\">\r\n          <img src=\"@/assets/imgs/消防.png\" alt=\"\" style=\"width: 60px; height: 60px\">\r\n        </div>\r\n        <div style=\"flex: 1; font-size: 20px\">\r\n          <div style=\"margin-bottom: 5px\">警员总数</div>\r\n          <div style=\"font-weight: bold\">{{ count.volCount }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card item\">\r\n        <div style=\"flex: 1; text-align: center\">\r\n          <img src=\"@/assets/imgs/物资.png\" alt=\"\" style=\"width: 60px; height: 60px\">\r\n        </div>\r\n        <div style=\"flex: 1; font-size: 20px\">\r\n          <div style=\"margin-bottom: 5px\">物资总数</div>\r\n          <div style=\"font-weight: bold\">{{ count.donateCount }}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card item\">\r\n        <div style=\"flex: 1; text-align: center\">\r\n          <img src=\"@/assets/imgs/留言.png\" alt=\"\" style=\"width: 60px; height: 60px\">\r\n        </div>\r\n        <div style=\"flex: 1; font-size: 20px\">\r\n          <div style=\"margin-bottom: 5px\">留言总数</div>\r\n          <div style=\"font-weight: bold\">{{ count.commentCount }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div style=\"display: flex; grid-gap: 15px\">\r\n      <div style=\"flex: 1;\" class=\"card\">\r\n        <div id=\"pie\" style=\"height: 400px\"></div>\r\n      </div>\r\n      <div style=\"flex: 1\" class=\"card\">\r\n        <div id=\"bar\" style=\"height: 400px\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\nconst pieOption = {\r\n  title: {\r\n    text: '物资捐赠分类统计',\r\n    subtext: '比例图',\r\n    left: 'center'\r\n  },\r\n  tooltip: {\r\n    trigger: 'item'\r\n  },\r\n  legend: {\r\n    orient: 'vertical',\r\n    left: 'left'\r\n  },\r\n  series: [\r\n    {\r\n      type: 'pie',\r\n      center: ['50%', '60%'],\r\n      radius: '50%',\r\n      data: [],\r\n      label: {\r\n        show: true,\r\n        formatter(param) {\r\n          return param.name + ' (' + param.percent + '%)';\r\n        }\r\n      },\r\n      emphasis: {\r\n        itemStyle: {\r\n          shadowBlur: 10,\r\n          shadowOffsetX: 0,\r\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\nconst barOption = {\r\n  title: {\r\n    text: '分类救援统计',\r\n    subtext: '柱状图',\r\n    left: 'center'\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis'\r\n  },\r\n  legend: {\r\n    left: 'left'\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: []\r\n  },\r\n  yAxis: {\r\n    type: 'value'\r\n  },\r\n  series: [\r\n    {\r\n      data: [],\r\n      type: 'bar',\r\n      smooth: true,\r\n      itemStyle: {\r\n        normal: {\r\n          color: function(params) { // 根据索引返回对应的颜色\r\n            let colorList = ['#ffaa2e','#32C5E9','#fa4c4c','#08b448','#FFDB5C','#ff9f7f','#fb7293','#E062AE','#E690D1','#e7bcf3']\r\n            return colorList[params.dataIndex];\r\n          }\r\n        }\r\n      },\r\n    }\r\n  ]\r\n}\r\n\r\nexport default {\r\n  name: \"Dashboard\",\r\n  data() {\r\n    return {\r\n      count: {\r\n        helpCount: 0,\r\n        volCount: 0,\r\n        donateCount: 0,\r\n        commentCount: 0\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.load()\r\n\r\n    let pieDom = document.getElementById('pie');\r\n    let pieChart = echarts.init(pieDom);\r\n    this.$request.get('/pieData').then(res => {\r\n      pieOption.series[0].data = res.data || []\r\n      pieChart.setOption(pieOption)\r\n    })\r\n\r\n    // 柱状图\r\n    let barDom = document.getElementById('bar');\r\n    let barChart = echarts.init(barDom);\r\n    this.$request.get('/barData').then(res => {\r\n      barOption.xAxis.data = res.data?.map(v => v.name) || []\r\n      barOption.series[0].data = res.data?.map(v => v.value) || []\r\n      barChart.setOption(barOption)\r\n    })\r\n  },\r\n  methods: {\r\n    load() {\r\n      this.$request.get('/count').then(res => {\r\n        this.count = res.data || {}\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.item {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n</style>"],"mappings":"AAqDA,YAAAA,OAAA;AAEA,MAAAC,SAAA;EACAC,KAAA;IACAC,IAAA;IACAC,OAAA;IACAC,IAAA;EACA;EACAC,OAAA;IACAC,OAAA;EACA;EACAC,MAAA;IACAC,MAAA;IACAJ,IAAA;EACA;EACAK,MAAA,GACA;IACAC,IAAA;IACAC,MAAA;IACAC,MAAA;IACAC,IAAA;IACAC,KAAA;MACAC,IAAA;MACAC,UAAAC,KAAA;QACA,OAAAA,KAAA,CAAAC,IAAA,UAAAD,KAAA,CAAAE,OAAA;MACA;IACA;IACAC,QAAA;MACAC,SAAA;QACAC,UAAA;QACAC,aAAA;QACAC,WAAA;MACA;IACA;EACA;AAEA;AAEA,MAAAC,SAAA;EACAxB,KAAA;IACAC,IAAA;IACAC,OAAA;IACAC,IAAA;EACA;EACAC,OAAA;IACAC,OAAA;EACA;EACAC,MAAA;IACAH,IAAA;EACA;EACAsB,KAAA;IACAhB,IAAA;IACAG,IAAA;EACA;EACAc,KAAA;IACAjB,IAAA;EACA;EACAD,MAAA,GACA;IACAI,IAAA;IACAH,IAAA;IACAkB,MAAA;IACAP,SAAA;MACAQ,MAAA;QACAC,KAAA,WAAAA,CAAAC,MAAA;UAAA;UACA,IAAAC,SAAA;UACA,OAAAA,SAAA,CAAAD,MAAA,CAAAE,SAAA;QACA;MACA;IACA;EACA;AAEA;AAEA;EACAf,IAAA;EACAL,KAAA;IACA;MACAqB,KAAA;QACAC,SAAA;QACAC,QAAA;QACAC,WAAA;QACAC,YAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;IAEA,IAAAC,MAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,IAAAC,QAAA,GAAA7C,OAAA,CAAA8C,IAAA,CAAAJ,MAAA;IACA,KAAAK,QAAA,CAAAC,GAAA,aAAAC,IAAA,CAAAC,GAAA;MACAjD,SAAA,CAAAS,MAAA,IAAAI,IAAA,GAAAoC,GAAA,CAAApC,IAAA;MACA+B,QAAA,CAAAM,SAAA,CAAAlD,SAAA;IACA;;IAEA;IACA,IAAAmD,MAAA,GAAAT,QAAA,CAAAC,cAAA;IACA,IAAAS,QAAA,GAAArD,OAAA,CAAA8C,IAAA,CAAAM,MAAA;IACA,KAAAL,QAAA,CAAAC,GAAA,aAAAC,IAAA,CAAAC,GAAA;MACAxB,SAAA,CAAAC,KAAA,CAAAb,IAAA,GAAAoC,GAAA,CAAApC,IAAA,EAAAwC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAApC,IAAA;MACAO,SAAA,CAAAhB,MAAA,IAAAI,IAAA,GAAAoC,GAAA,CAAApC,IAAA,EAAAwC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,KAAA;MACAH,QAAA,CAAAF,SAAA,CAAAzB,SAAA;IACA;EACA;EACA+B,OAAA;IACAhB,KAAA;MACA,KAAAM,QAAA,CAAAC,GAAA,WAAAC,IAAA,CAAAC,GAAA;QACA,KAAAf,KAAA,GAAAe,GAAA,CAAApC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}